apiVersion: apps/v1
kind: Deployment
metadata:
  {{- if .Values.server.protb }}
  name: trino-protb-coordinator
  {{- else }}
  name: {{ template "trino.coordinator" . }}
  {{ end }}
  labels:
    app: {{ template "trino.name" . }}
    chart: {{ template "trino.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: coordinator
spec:
  selector:
    matchLabels:
      app: {{ template "trino.name" . }}
      release: {{ .Release.Name }}
      component: coordinator
  template:
    metadata:
      labels:
        app: {{ template "trino.name" . }}
        release: {{ .Release.Name }}
        component: coordinator
        {{- if .Values.labels.allowTrue }}
        network.statcan.gc.ca/allow-kube-apiserver: "true"
        {{- end }}
    spec:
      serviceAccountName: {{ include "trino.serviceAccountName" . }}
      {{- with .Values.securityContext }}
      securityContext:
        runAsUser: {{ .runAsUser }}
        runAsGroup: {{ .runAsGroup }}
      {{- end }}
      volumes:
        - name: config-volume
          projected:
            sources:
              - configMap:
                  name: {{ template "trino.coordinator" . }}
        - name: storage-config
          secret:
            secretName: core-site
        - name: rules-volume
          projected:
            sources:
              - configMap:
                {{- if .Values.server.protb }}
                  name: trino-protb-rules
                {{- else }}
                  name: trino-unclassified-rules
                {{ end }}
        - name: catalog-volume
          configMap:
          {{- if .Values.server.protb }}
            name: trino-protb-catalog
          {{- else }}
            name: {{ template "trino.catalog" . }}
          {{ end  }}
        - name: nginx-conf
          configMap:
          {{- if .Values.server.protb }}
            name: nginx-conf-protb
          {{- else }}
            name: nginx-conf
          {{ end }}
        - name: nginx-init
          configMap:
          {{- if .Values.server.protb }}
            name: nginx-init-protb
            defaultMode: 0755
          {{- else }}
            name: nginx-init
            defaultMode: 0755
          {{ end }}
        - name: user-mapping
          configMap:
          {{- if .Values.server.protb }}
            name: user-mapping-protb-cm
          {{- else }}
            name: user-mapping-cm
          {{ end }}
        - name: cache-volume
          emptyDir: {}

      {{- if .Values.initContainers.coordinator }}
      initContainers:
      {{-  tpl (toYaml .Values.initContainers.coordinator) . | nindent 6 }}
      {{- end }}
        {{- range .Values.secretMounts }}
        - name: {{ .name }}
          secret:
            secretName: {{ .secretName }}
        {{- end }}
      imagePullSecrets:
        - name: registry-credentials
      containers:
        - name: {{ .Chart.Name }}-coordinator
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- toYaml .Values.env | nindent 12 }}
          volumeMounts:
            - mountPath: /etc/hadoop/conf/
              name: storage-config
            - mountPath: /etc/mapping/
              name: user-mapping
            - mountPath: /etc/catalog
              name: rules-volume
            - mountPath: {{ .Values.server.config.path }}
              name: config-volume
            - mountPath: {{ .Values.server.config.path }}/catalog
              name: catalog-volume
            - mountPath: /opt/hive-cache/fcache
              name: cache-volume
            {{- range .Values.secretMounts }}
            - name: {{ .name }}
              mountPath: {{ .path }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /v1/info
              port: http
          readinessProbe:
            httpGet:
              path: /v1/info
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: {{ .Chart.Name }}-jwks-client
          image: nginxinc/nginx-unprivileged:1.20-alpine
          securityContext:
            runAsUser: 101
          resources:
            limits:
              memory: "128Mi"
              cpu: "100m"
          ports:
            - containerPort: 8090
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/nginx.conf.tmpl
              subPath: nginx.conf.tmpl
              readOnly: true
            - name: nginx-init
              mountPath: /docker-entrypoint.d/envsubst-conf.sh
              subPath: envsubst-conf.sh
              readOnly: true
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
