apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "argo-controller.fullname" . }}-workflows
  labels:
    {{- include "argo-controller.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "argo-controller.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "argo-controller.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "argo-controller.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - workflows
            - --namespace-admins-role-binding-name={{ required "workflows.args.namespaceAdminsRoleBindingName is required" .Values.workflows.args.namespaceAdminsRoleBindingName }}
            - --user-interface-cluster-role-name={{ required "workflows.args.userInterfaceClusterRoleName is required" .Values.workflows.args.userInterfaceClusterRoleName }}
            - --argo-workflows-cluster-role-name={{ required "workflows.args.argoWorkflowsClusterRoleName is required" .Values.workflows.args.argoWorkflowsClusterRoleName }}
          env:
            {{- if .Values.storageAccount.existingSecret }}
            - name: ARGO_SECRET_NAME
              value: {{ .Values.storageAccount.existingSecret }}
            - name: ARGO_STORAGE_ACCOUNT_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.storageAccount.existingSecret }}
                  key: root-user
            - name: ARGO_STORAGE_ACCOUNT_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.storageAccount.existingSecret }}
                  key: root-password
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
