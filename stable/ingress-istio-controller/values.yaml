# Default values for ingress-istio-controller.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Name overrides that can be used by the helpers.
nameOverride: ""
fullnameOverride: ""

# These values determine the settings that can be passed to the controller.
# If values are left empty, defaults in the image will be used.
# Please see github.com/statcan/ingress-istio-controller for defaults.
controller:
  # Path to a kubeconfig. Only required if out-of-cluster.
  kubeconfig:
  # The address of the Kubernetes API server. Overrides any value in kubeconfig. Only required if out-of-cluster.
  master:
  # The cluster domain.
  clusterDomain:
  # The name of the gateway to attach to. Should be in the form <namespace>/<name>.
  defaultGateway:
  # The weight given to VirtualServices generated by the controller.
  virtualServiceWeight:
  # The ingress class annotation to monitor (empty string to skip checking annotation).
  ingressClass:
  # Gateways are scoped to the same namespace they exist within. This will limit the Service search for Load Balancer status. In istiod, this is controlled via the PILOT_SCOPE_GATEWAY_TO_NAMESPACE environment variable.
  scopedGateways: false

# Settings relating to the IngressClass for this controller
ingressClass:
  # Determines if the IngressClass is deployed
  deploy: false
  # Determines if the IngressClass is set as the default in the Cluster
  # NB: If more than one IngressClass is defined as the default,
  # the admission controller will prevent the creation of new Ingresses.
  default: false

gateway:
  # Determines if the Gateway should be deployed
  deploy: false
  # Determines if this gateway should be used as the Controllers defaultGateway.
  # Takes precedence over controller.defaultGateway
  isControllerDefault: false
  # The specification of the Gateway to be used.
  spec:
    selector:
      app: istio-ingressgateway
      istio: ingressgateway
    servers:
      - hosts:
          - '*'
        port:
          name: http
          number: 80
          protocol: HTTP2
        tls:
          httpsRedirect: true
      - hosts:
          - '*'
        port:
          name: https-default
          number: 443
          protocol: HTTPS
        tls:
          cipherSuites:
            - TLS_AES_256_GCM_SHA384
            - TLS_AES_128_GCM_SHA256
            - ECDHE-RSA-AES256-GCM-SHA384
            - ECDHE-RSA-AES128-GCM-SHA256
          credentialName: wildcard-tls
          maxProtocolVersion: TLSV1_2
          minProtocolVersion: TLSV1_2
          mode: SIMPLE
          privateKey: sds
          serverCertificate: sds

replicaCount: 1

image:
  repository: statcan/ingress-istio-controller
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  # tag: "v1.0.0"

imagePullSecrets: {}

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 500m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
