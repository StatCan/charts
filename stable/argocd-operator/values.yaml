# Default values for argocd-operator.

operator:
  clusterDomain: ""
  nsToWatch: "argo-cd-system"
  nsClusterConfig: ""
  image:
    repository: quay.io/argoprojlabs/argocd-operator
    tag: v0.4.0
    pullPolicy: IfNotPresent
  imagePullSecrets: []
  podAnnotations: {}
  podLabels: {}
  # extraEnv: []
  replicaCount: 1
  securityContext:
    capabilities:
      drop:
      - ALL
    runAsUser: 1000
    runAsGroup: 1000
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    fsGroup: 1000
  resources:
    requests:
      cpu: 200m
      memory: 256Mi
      ephemeral-storage: 500Mi

# For the argocd-vault-plugin
vault:
  enabled: false
  auth:
    url: http://vault.default:8200
    # https://github.com/IBM/argocd-vault-plugin/blob/main/docs/config.md
    type: k8s
    # You need to create this kubernetes role in vault
    # The end role is `{prefix}{namespace}`, like `argocd_dscd_system`.
    # This is to isolate Vault spaces from eachother.
    # NOTE: The namespace will have "-"s replaced with "_"s
    rolePrefix: argocd_

  pluginConfig: &pluginConfig |
    # If the argocd-vault-plugin is not enabled,
    # then obviously these will not work.
    - name: argocd-vault-plugin
      generate:
        command: ["argocd-vault-plugin"]
        args: ["generate", "./"]
    - name: argocd-vault-plugin-helm
      init:
        command: ["sh", "-c"]
        args: ["helm dependency build"]
      generate:
        command: ["bash", "-c"]
        args: ['helm template "\$ARGOCD_APP_NAME" . --include-crds -f <(echo "\$HELM_VALUES") | argocd-vault-plugin generate -']

# ## ArgoCD Projects Definition
# projects:
#   # Project name
#   - name: argprojo01
#     namespace: "argo-cd-system"
#     podAnnotations: {}
#     podLabels: {}
#     spec:
#       oidcConfig: |
#         name: myoidc
#         issuer: OIDC_FQDN
#         clientID: id
#         clientSecret: secret
#         requestedIDTokenClaims:
#           groups:
#             essential: true
#         requestedScopes: ["openid", "profile", "email"]
#       rbac:
#         defaultPolicy: 'role:readonly'
#         policy: |
#           g, system:cluster-admins, role:admin
#         scopes: '[groups]'
#       server:
#         autoscale:
#           enabled: true
#         host: ARGOCD_FQDN
#         insecure: false
#       configManagementPlugins: *pluginConfig

#   # Project name
#   - name: argprojo02
#     namespace: "argo-cd-system"
#     podAnnotations: {}
#     podLabels: {}
#     spec:
#       oidcConfig: |
#         name: myoidc
#         issuer: OIDC_FQDN
#         clientID: id
#         clientSecret: secret
#         requestedIDTokenClaims:
#           groups:
#             essential: true
#         requestedScopes: ["openid", "profile", "email"]
#       rbac:
#         defaultPolicy: 'role:readonly'
#         policy: |
#           g, system:cluster-admins, role:admin
#         scopes: '[groups]'
#       server:
#         autoscale:
#           enabled: true
#         host: ARGOCD_FQDN
#         insecure: false
#       configManagementPlugins: *pluginConfig
