apiVersion: v1
kind: Secret
metadata:
  name: {{ include "vetting-app.fullname" . }}-reports-cronjob-{{ .Values.entrypointSh.name }}-secret
  labels:
    app.kubernetes.io/name: {{ include "vetting-app.fullname" . }}
    helm.sh/chart: {{ include "vetting-app.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}

type: Opaque
stringData:
  entrypoint.sh: |-
      #!/bin/bash
      set -e
      
      sleep 15
      
      {{- if .Values.external.enabled }}
          while ! nc -z {{ .Values.external.host }} {{ .Values.external.port }}; do
      {{- else if .Values.postgresql.enabled }}
          while ! nc -z {{ .Release.Name }}-postgresql 5432; do
      {{- end }}

        echo "Waiting for POSTGRES!"
        sleep 0.1
      done

      echo "Report type is $1"

      if [ $1 == 'time_spent_vetting' ]
      then

        if [ $2 == 'monthly' ]
        then
          flask reports time_spent_vetting month
        else
          flask reports time_spent_vetting  year
        fi

      elif [ $1 == 'vetting_analyst_project' ]
      then
        flask reports vetting_analyst_project

      elif [ $1 == 'vetting_project' ]
      then
        flask reports vetting_project

      elif [ $1 == 'vetting_analyst' ]
      then
        flask reports vetting_analyst

      elif [ $1 == 'vetting_requests_analyst' ]
      then
        flask reports vetting_requests_analyst

      elif [ $1 == 'requests_sent_back' ]
      then
        flask reports requests_sent_back

      elif [ $1 == 'vetting_hours_org' ]
      then
        flask reports vetting_hours_org

      elif [ $1 == 'open_requests_analysts' ]
      then
        flask reports open_requests_analysts

      fi

      #flask run --host=0.0.0.0

