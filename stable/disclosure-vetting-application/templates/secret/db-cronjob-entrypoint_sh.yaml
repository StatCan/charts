apiVersion: v1
kind: Secret
metadata:
  name: {{ include "vetting-app.fullname" . }}-db-cronjob-{{ .Values.entrypointSh.name }}-secret
type: Opaque
stringData:
  entrypoint.sh: |-
        #!/bin/bash
        set -e
{{- if .Values.external.enabled }}
        while ! nc -z {{ .Values.external.host }} {{ .Values.external.port }}; do
{{- else if .Values.postgresql.enabled }}
        while ! nc -z {{ .Release.Name }}-postgresql 5432; do
{{- end }}

          echo "Waiting for POSTGRES!"
          sleep 0.1
        done
        
        echo "First input is $1"
        echo "Second input is $2"
        
        if [ $2 == 'init' ]
        then
          flask vettingDb wipeTables
          flask db upgrade
        elif [ $2 == 'initWithData' ]
        then
          flask vettingDb wipeTables
          flask db upgrade
          flask vettingDb populateInitData
        elif [ $2 == 'initWithDataAndUsers' ]
        then
          flask vettingDb wipeTables
          flask db upgrade
          flask vettingDb populateInitData
          flask vettingDb populateInitUsers
        elif [ $2 == 'populateInitData' ]
        then
          flask vettingDb populateInitData
        elif [ $2 == 'populateInitUsers' ]
        then
          flask vettingDb populateInitUsers
        elif [ $2 == 'update' ]
        then
          flask db upgrade
        elif [ $2 == 'addmigration' ]
        then
          flask db migrate -m $3
          flask db upgrade
        fi

        if [ $1 == 'true' ]
        then
          if [ $2 == 'massive' ]
          then
            flask vettingDb populateTestData true
          else
            flask vettingDb populateTestData false
          fi
        fi

        #gunicorn --bind 0.0.0.0:5000 --workers 4 --threads 50 run:app
