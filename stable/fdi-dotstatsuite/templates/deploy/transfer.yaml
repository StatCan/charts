{{- if .Values.transfer.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dotstatsuite.fullname" . }}-transfer
  labels:
    {{- include "dotstatsuite.labels" . | nindent 4 }}-transfer
spec:
{{- if not .Values.transfer.autoscaling.enabled }}
  replicas: {{ .Values.transfer.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "dotstatsuite.selectorLabels" . | nindent 6 }}-transfer
  template:
    metadata:
      annotations:
        traffic.sidecar.istio.io/excludeOutboundPorts: '1433'
        sidecar.istio.io/logLevel: 'warning'
        sidecar.istio.io/componentLogLevel: 'warning'
    {{- with .Values.transfer.podAnnotations }}
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "dotstatsuite.selectorLabels" . | nindent 8 }}-transfer
    spec:
      {{- with .Values.transfer.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "dotstatsuite.transfer.serviceAccountName" . }}-transfer
      securityContext:
        {{- toYaml .Values.transfer.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ include "dotstatsuite.fullname" . }}-transfer
          securityContext:
            {{- toYaml .Values.transfer.securityContext | nindent 12 }}
          image: "{{ .Values.transfer.image.repository }}:{{ .Values.transfer.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.transfer.image.pullPolicy }}
          volumeMounts: 
            {{- if .Values.transfer.sdmx_logs.enabled }}
            - mountPath: "/app/logs"
              name: "sdmx-logs"
            {{- end}}
            {{- if .Values.transferLog4netConfig.enableConfig }}
            - mountPath: /app/config/log4net.config
              name: transfer-log4net
              subPath: log4net.config
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ .Values.fullnameOverride }}-mssql
            - configMapRef:
                name: {{ .Values.fullnameOverride }}-authz
          env:
            - name: SA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.fullnameOverride }}-db-secret
                  key: sapassword
            - name: COMMON_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.fullnameOverride }}-mssql-common
                  key: password
            - name: SMTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.fullnameOverride }}-smtp
                  key: password                       
            {{- if index .Values.nsiStable.enabled }}    
            - name: STABLE_DATA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.fullnameOverride }}-mssql-sdmx-stable-data
                  key: password
            - name: STABLE_STRUCTURE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.fullnameOverride }}-mssql-sdmx-stable-structure
                  key: password
            {{- end }} 
            {{- if index .Values.nsiReset.enabled }}     
            - name: RESET_DATA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.fullnameOverride }}-mssql-sdmx-reset-data
                  key: password
            - name: RESET_STRUCTURE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.fullnameOverride }}-mssql-sdmx-reset-structure
                  key: password    
            {{- end }} 
            {{- if index .Values.nsiDesign.enabled }}                   
            - name: DESIGN_DATA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.fullnameOverride }}-mssql-sdmx-design-data
                  key: password
            - name: DESIGN_STRUCTURE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.fullnameOverride }}-mssql-sdmx-design-structure
                  key: password   
            {{- end }} 
            {{- if index .Values.nsiStaging.enabled }}                   
            - name: STAGING_DATA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.fullnameOverride }}-mssql-sdmx-staging-data
                  key: password
            - name: STAGING_STRUCTURE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.fullnameOverride }}-mssql-sdmx-staging-structure
                  key: password    
            {{- end }} 
            - name: "MaxTransferErrorAmount"
              value: "0"
            - name: "MaxTextAttributeLength"
              value: "150"
            - name: "MinPercentageDiskSpace"
              value: "10"
            - name: "DefaultLanguageCode"
              value: "en"
            - name: "SmtpHost"
              value: "{{ .Values.managed.smtp.host }}"
            - name: "SmtpPort"
              value: "{{ .Values.managed.smtp.port }}"
            - name: "SmtpEnableSsl"
              value: "{{ .Values.managed.smtp.enableSsl }}"
            - name: "SmtpUserName"
              value: "{{ .Values.managed.smtp.username }}"
            - name: "SmtpUserPassword"
              value: $(SMTP_PASSWORD)
            - name: "MailFrom"
              value: "{{ .Values.managed.smtp.mailFrom }}"
            - name: "DotStatSuiteCoreCommonDbConnectionString"
              value: "Server={{ template "dotstatsuite.databaseHost" . }};Database=$(COMMON_DB);User=$(COMMON_USER);Password=$(COMMON_PASSWORD);"                                
{{- if index .Values.nsiStable.enabled }}            
            - name: "SpacesInternal__0__Id"
              value: "{{ .Values.nsiStable.dataspace }}"
            - name: "SpacesInternal__0__DotStatSuiteCoreStructDbConnectionString"
              value: "Server={{ template "dotstatsuite.databaseHost" . }};Database=$(STABLE_STRUCTURE_DB);User=$(STABLE_STRUCTURE_USER);Password=$(STABLE_STRUCTURE_PASSWORD);"
            - name: "SpacesInternal__0__DotStatSuiteCoreDataDbConnectionString"
              value: "Server={{ template "dotstatsuite.databaseHost" . }};Database=$(STABLE_DATA_DB);User=$(STABLE_DATA_USER);Password=$(STABLE_DATA_PASSWORD);"
            - name: "SpacesInternal__0__DataImportTimeOutInMinutes"
              value: "{{ .Values.transfer.dataImportTimeOutInMinutes }}"
            - name: "SpacesInternal__0__DatabaseCommandTimeoutInSec"
              value: "{{ .Values.transfer.databaseCommandTimeoutInSec }}"
            - name: "SpacesInternal__0__AutoLog2DB"
              value: "{{ .Values.transfer.autoLog2DB }}"
            - name: "SpacesInternal__0__AutoLog2DBLogLevel"
              value: "{{ .Values.transfer.autoLog2DBLogLevel }}"
{{- end }}
{{- if index .Values.nsiReset.enabled }}  
            - name: "SpacesInternal__1__Id"
              value: "{{ .Values.nsiReset.dataspace }}"
            - name: "SpacesInternal__1__DotStatSuiteCoreStructDbConnectionString"
              value: "Server={{ template "dotstatsuite.databaseHost" . }};Database=$(RESET_STRUCTURE_DB);User=$(RESET_STRUCTURE_USER);Password=$(RESET_STRUCTURE_PASSWORD);"
            - name: "SpacesInternal__1__DotStatSuiteCoreDataDbConnectionString"
              value: "Server={{ template "dotstatsuite.databaseHost" . }};Database=$(RESET_DATA_DB);User=$(RESET_DATA_USER);Password=$(RESET_DATA_PASSWORD);"
            - name: "SpacesInternal__1__DataImportTimeOutInMinutes"
              value: "{{ .Values.transfer.dataImportTimeOutInMinutes }}"
            - name: "SpacesInternal__1__DatabaseCommandTimeoutInSec"
              value: "{{ .Values.transfer.databaseCommandTimeoutInSec }}"
            - name: "SpacesInternal__1__AutoLog2DB"
              value: "{{ .Values.transfer.autoLog2DB }}"
            - name: "SpacesInternal__1__AutoLog2DBLogLevel"
              value: "{{ .Values.transfer.autoLog2DBLogLevel }} "   
{{- end }}      
{{- if index .Values.nsiDesign.enabled }}  
            - name: "SpacesInternal__2__Id"
              value: "{{ .Values.nsiDesign.dataspace }}"
            - name: "SpacesInternal__2__DotStatSuiteCoreStructDbConnectionString"
              value: "Server={{ template "dotstatsuite.databaseHost" . }};Database=$(DESIGN_STRUCTURE_DB);User=$(DESIGN_STRUCTURE_USER);Password=$(DESIGN_STRUCTURE_PASSWORD);"
            - name: "SpacesInternal__2__DotStatSuiteCoreDataDbConnectionString"
              value: "Server={{ template "dotstatsuite.databaseHost" . }};Database=$(DESIGN_DATA_DB);User=$(DESIGN_DATA_USER);Password=$(DESIGN_DATA_PASSWORD);"
            - name: "SpacesInternal__2__DataImportTimeOutInMinutes"
              value: "{{ .Values.transfer.dataImportTimeOutInMinutes }}"
            - name: "SpacesInternal__2__DatabaseCommandTimeoutInSec"
              value: "{{ .Values.transfer.databaseCommandTimeoutInSec }}"
            - name: "SpacesInternal__2__AutoLog2DB"
              value: "{{ .Values.transfer.autoLog2DB }}"
            - name: "SpacesInternal__2__AutoLog2DBLogLevel"
              value: "{{ .Values.transfer.autoLog2DBLogLevel }} "   
{{- end }}  
{{- if index .Values.nsiStaging.enabled }}  
            - name: "SpacesInternal__3__Id"
              value: "{{ .Values.nsiStaging.dataspace }}"
            - name: "SpacesInternal__3__DotStatSuiteCoreStructDbConnectionString"
              value: "Server={{ template "dotstatsuite.databaseHost" . }};Database=$(STAGING_STRUCTURE_DB);User=$(STAGING_STRUCTURE_USER);Password=$(STAGING_STRUCTURE_PASSWORD);"
            - name: "SpacesInternal__3__DotStatSuiteCoreDataDbConnectionString"
              value: "Server={{ template "dotstatsuite.databaseHost" . }};Database=$(STAGING_DATA_DB);User=$(STAGING_DATA_USER);Password=$(STAGING_DATA_PASSWORD);"
            - name: "SpacesInternal__3__DataImportTimeOutInMinutes"
              value: "{{ .Values.transfer.dataImportTimeOutInMinutes }}"
            - name: "SpacesInternal__3__DatabaseCommandTimeoutInSec"
              value: "{{ .Values.transfer.databaseCommandTimeoutInSec }}"
            - name: "SpacesInternal__3__AutoLog2DB"
              value: "{{ .Values.transfer.autoLog2DB }}"
            - name: "SpacesInternal__3__AutoLog2DBLogLevel"
              value: "{{ .Values.transfer.autoLog2DBLogLevel }} "    
{{- end }}                
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /live
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          resources:
            {{- toYaml .Values.transfer.resources | nindent 12 }}
      volumes: 
        {{- if .Values.transfer.sdmx_logs.enabled }}
        - azureFile: 
            secretName: {{ .Values.fullnameOverride }}-sdmx-logs-secret
            shareName: {{ .Values.transfer.sdmx_logs.logShareName }}
          name: "sdmx-logs"
        {{- end }}
        {{- if .Values.transferLog4netConfig.enableConfig }}
        - name: transfer-log4net
          configMap:
            name: {{ .Values.transferLog4netConfig.name }}
        {{- end }}
      initContainers:
{{- if index .Values.nsiStable.enabled }}        
        - name: dbup-{{ template "dotstatsuite.fullname" . }}-stable-data
          image: "{{ .Values.nsiStable.dbup.image.repository }}:{{ .Values.nsiStable.dbup.image.tag }}"
          imagePullPolicy: {{ .Values.nsiStable.dbup.image.pullPolicy }}
          envFrom:
          - configMapRef:
              name: {{ .Values.fullnameOverride }}-mssql
          env:
          - name: SA_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.fullnameOverride }}-db-secret
                key: sapassword
          - name: PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.fullnameOverride }}-mssql-sdmx-stable-data
                key: password
          - name: READ_ONLY_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.fullnameOverride }}-mssql-read-only
                key: password
          command: ['bash', '-c']
          args:
            - dotnet DotStat.DbUp.dll upgrade --connectionString "Server={{ template "dotstatsuite.databaseHost" . }};Database=$(STABLE_DATA_DB);User=$(SA_USER);Password=$(SA_PASSWORD);" --dataDb --loginName $(STABLE_DATA_USER) --loginPwd $(PASSWORD) --force --alterPassword --ROloginName ${READ_ONLY_USER} --ROloginPwd ${READ_ONLY_PASSWORD}       
{{- end }}     
{{- if index .Values.nsiReset.enabled }}          
        - name: dbup-{{ template "dotstatsuite.fullname" .  }}-reset-data
          image: "{{ .Values.nsiReset.dbup.image.repository }}:{{ .Values.nsiReset.dbup.image.tag }}"
          imagePullPolicy: {{ .Values.nsiReset.dbup.image.pullPolicy }}
          envFrom:
          - configMapRef:
              name: {{ .Values.fullnameOverride }}-mssql
          env:
          - name: SA_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.fullnameOverride }}-db-secret
                key: sapassword
          - name: PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.fullnameOverride }}-mssql-sdmx-reset-data
                key: password
          - name: READ_ONLY_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.fullnameOverride }}-mssql-read-only
                key: password
          command: ['bash', '-c']
          args:
            - dotnet DotStat.DbUp.dll upgrade --connectionString "Server={{ template "dotstatsuite.databaseHost" . }};Database=$(RESET_DATA_DB);User=$(SA_USER);Password=$(SA_PASSWORD);" --dataDb --loginName $(RESET_DATA_USER) --loginPwd $(PASSWORD) --force --dropDb --alterPassword --ROloginName ${READ_ONLY_USER} --ROloginPwd ${READ_ONLY_PASSWORD}
{{- end }}     
{{- if index .Values.nsiDesign.enabled }}          
        - name: dbup-{{ template "dotstatsuite.fullname" .  }}-design-data
          image: "{{ .Values.nsiDesign.dbup.image.repository }}:{{ .Values.nsiDesign.dbup.image.tag }}"
          imagePullPolicy: {{ .Values.nsiDesign.dbup.image.pullPolicy }}
          envFrom:
          - configMapRef:
              name: {{ .Values.fullnameOverride }}-mssql
          env:
          - name: SA_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.fullnameOverride }}-db-secret
                key: sapassword
          - name: PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.fullnameOverride }}-mssql-sdmx-design-data
                key: password
          - name: READ_ONLY_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.fullnameOverride }}-mssql-read-only
                key: password
          command: ['bash', '-c']
          args:
            - dotnet DotStat.DbUp.dll upgrade --connectionString "Server={{ template "dotstatsuite.databaseHost" . }};Database=$(DESIGN_DATA_DB);User=$(SA_USER);Password=$(SA_PASSWORD);" --dataDb --loginName $(DESIGN_DATA_USER) --loginPwd $(PASSWORD) --force --alterPassword --ROloginName ${READ_ONLY_USER} --ROloginPwd ${READ_ONLY_PASSWORD}
{{- end }} 
{{- if index .Values.nsiStaging.enabled }}          
        - name: dbup-{{ template "dotstatsuite.fullname" .  }}-staging-data
          image: "{{ .Values.nsiStaging.dbup.image.repository }}:{{ .Values.nsiStaging.dbup.image.tag }}"
          imagePullPolicy: {{ .Values.nsiStaging.dbup.image.pullPolicy }}
          envFrom:
          - configMapRef:
              name: {{ .Values.fullnameOverride }}-mssql
          env:
          - name: SA_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.fullnameOverride }}-db-secret
                key: sapassword
          - name: PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.fullnameOverride }}-mssql-sdmx-staging-data
                key: password
          - name: READ_ONLY_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.fullnameOverride }}-mssql-read-only
                key: password
          command: ['bash', '-c']
          args:
            - dotnet DotStat.DbUp.dll upgrade --connectionString "Server={{ template "dotstatsuite.databaseHost" . }};Database=$(STAGING_DATA_DB);User=$(SA_USER);Password=$(SA_PASSWORD);" --dataDb --loginName $(STAGING_DATA_USER) --loginPwd $(PASSWORD) --force --alterPassword --ROloginName ${READ_ONLY_USER} --ROloginPwd ${READ_ONLY_PASSWORD}
{{- end }} 
      {{- with .Values.transfer.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.transfer.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.transfer.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end -}}
