{{- if .Values.transfer.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dotstatsuite.fullname" . }}-transfer
  labels:
    {{- include "dotstatsuite.labels" . | nindent 4 }}-transfer
spec:
{{- if not .Values.transfer.autoscaling.enabled }}
  replicas: {{ .Values.transfer.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "dotstatsuite.selectorLabels" . | nindent 6 }}-transfer
  template:
    metadata:
      annotations:
        traffic.sidecar.istio.io/excludeOutboundPorts: '1433'
    {{- with .Values.transfer.podAnnotations }}
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "dotstatsuite.selectorLabels" . | nindent 8 }}-transfer
    spec:
      {{- with .Values.transfer.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "dotstatsuite.transfer.serviceAccountName" . }}-transfer
      securityContext:
        {{- toYaml .Values.transfer.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-transfer
          securityContext:
            {{- toYaml .Values.transfer.securityContext | nindent 12 }}
          image: "{{ .Values.transfer.image.repository }}:{{ .Values.transfer.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.transfer.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: mssql
            - configMapRef:
                name: authz
          env:
            - name: SA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: dotstatsuite-db-secret
                  key: sapassword
            - name: COMMON_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mssql-common
                  key: password
            - name: SMTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: smtp
                  key: password
            {{- if .Values.nsiDesignOecd.enabled }}
            - name: DESIGN_DATA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mssql-nsi-design-oecd-data
                  key: password
            - name: DESIGN_STRUCTURE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mssql-nsi-design-oecd-structure
                  key: password
            {{- end }}
            {{- if .Values.nsiStagingOecd.enabled }}
            - name: STAGING_DATA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mssql-nsi-staging-oecd-data
                  key: password
            - name: STAGING_STRUCTURE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mssql-nsi-staging-oecd-structure
                  key: password
            {{- end }}
            - name: STABLE_DATA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mssql-nsi-stable-siscc-data
                  key: password
            - name: STABLE_STRUCTURE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mssql-nsi-stable-siscc-structure
                  key: password
            - name: RESET_DATA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mssql-nsi-reset-siscc-data
                  key: password
            - name: RESET_STRUCTURE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mssql-nsi-reset-siscc-structure
                  key: password
            - name: "MaxTransferErrorAmount"
              value: "0"
            - name: "MaxTextAttributeLength"
              value: "150"
            - name: "DefaultLanguageCode"
              value: "en"
            - name: "SmtpHost"
              value: "{{ .Values.managed.smtp.host }}"
            - name: "SmtpPort"
              value: "{{ .Values.managed.smtp.port }}"
            - name: "SmtpEnableSsl"
              value: "{{ .Values.managed.smtp.enableSsl }}"
            - name: "SmtpUserName"
              value: "{{ .Values.managed.smtp.username }}"
            - name: "SmtpUserPassword"
              value: $(SMTP_PASSWORD)
            - name: "MailFrom"
              value: "{{ .Values.managed.smtp.mailFrom }}"
            - name: "DotStatSuiteCoreCommonDbConnectionString"
              value: "Server={{ template "dotstatsuite.databaseHost" . }};Database=$(COMMON_DB);User=$(COMMON_USER);Password=$(COMMON_PASSWORD);"
            {{- if .Values.nsiDesignOecd.enabled }}
            - name: "SpacesInternal__0__Id"
              value: "OECD-design"
            - name: "SpacesInternal__0__DotStatSuiteCoreStructDbConnectionString"
              value: "Server={{ template "dotstatsuite.databaseHost" . }};Database=$(NSI_DESIGN_OECD_STRUCTURE_DB);User=$(NSI_DESIGN_OECD_STRUCTURE_USER);Password=$(DESIGN_STRUCTURE_PASSWORD);"
            - name: "SpacesInternal__0__DotStatSuiteCoreDataDbConnectionString"
              value: "Server={{ template "dotstatsuite.databaseHost" . }};Database=$(NSI_DESIGN_OECD_DATA_DB);User=$(NSI_DESIGN_OECD_DATA_USER);Password=$(DESIGN_DATA_PASSWORD);"
            - name: "SpacesInternal__0__DataImportTimeOutInMinutes"
              value: "2"
            - name: "SpacesInternal__0__DatabaseCommandTimeoutInSec"
              value: "60"
            - name: "SpacesInternal__0__AutoLog2DB"
              value: "true"
            - name: "SpacesInternal__0__AutoLog2DBLogLevel"
              value: "Notice"
            {{- end }}
            {{- if .Values.nsiStagingOecd.enabled }}
            - name: "SpacesInternal__1__Id"
              value: "OECD-staging"
            - name: "SpacesInternal__1__DotStatSuiteCoreStructDbConnectionString"
              value: "Server={{ template "dotstatsuite.databaseHost" . }};Database=$(NSI_STAGING_OECD_STRUCTURE_DB);User=$(NSI_STAGING_OECD_STRUCTURE_USER);Password=$(STAGING_STRUCTURE_PASSWORD);"
            - name: "SpacesInternal__1__DotStatSuiteCoreDataDbConnectionString"
              value: "Server={{ template "dotstatsuite.databaseHost" . }};Database=$(NSI_STAGING_OECD_DATA_DB);User=$(NSI_STAGING_OECD_DATA_USER);Password=$(STAGING_DATA_PASSWORD);"
            - name: "SpacesInternal__1__DataImportTimeOutInMinutes"
              value: "2"
            - name: "SpacesInternal__1__DatabaseCommandTimeoutInSec"
              value: "60"
            - name: "SpacesInternal__1__AutoLog2DB"
              value: "true"
            - name: "SpacesInternal__1__AutoLog2DBLogLevel"
              value: "Notice"
            {{- end }}
            - name: "SpacesInternal__2__Id"
              value: "staging:SIS-CC-stable"
            - name: "SpacesInternal__2__DotStatSuiteCoreStructDbConnectionString"
              value: "Server={{ template "dotstatsuite.databaseHost" . }};Database=$(NSI_STABLE_SISCC_STRUCTURE_DB);User=$(NSI_STABLE_SISCC_STRUCTURE_USER);Password=$(STABLE_STRUCTURE_PASSWORD);"
            - name: "SpacesInternal__2__DotStatSuiteCoreDataDbConnectionString"
              value: "Server={{ template "dotstatsuite.databaseHost" . }};Database=$(NSI_STABLE_SISCC_DATA_DB);User=$(NSI_STABLE_SISCC_DATA_USER);Password=$(STABLE_DATA_PASSWORD);"
            - name: "SpacesInternal__2__DataImportTimeOutInMinutes"
              value: "5"
            - name: "SpacesInternal__2__DatabaseCommandTimeoutInSec"
              value: "270"
            - name: "SpacesInternal__2__AutoLog2DB"
              value: "true"
            - name: "SpacesInternal__2__AutoLog2DBLogLevel"
              value: "Notice"
            - name: "SpacesInternal__3__Id"
              value: "staging:SIS-CC-reset"
            - name: "SpacesInternal__3__DotStatSuiteCoreStructDbConnectionString"
              value: "Server={{ template "dotstatsuite.databaseHost" . }};Database=$(NSI_RESET_SISCC_STRUCTURE_DB);User=$(NSI_RESET_SISCC_STRUCTURE_USER);Password=$(RESET_STRUCTURE_PASSWORD);"
            - name: "SpacesInternal__3__DotStatSuiteCoreDataDbConnectionString"
              value: "Server={{ template "dotstatsuite.databaseHost" . }};Database=$(NSI_RESET_SISCC_DATA_DB);User=$(NSI_RESET_SISCC_DATA_USER);Password=$(RESET_DATA_PASSWORD);"
            - name: "SpacesInternal__3__DataImportTimeOutInMinutes"
              value: "5"
            - name: "SpacesInternal__3__DatabaseCommandTimeoutInSec"
              value: "270"
            - name: "SpacesInternal__3__AutoLog2DB"
              value: "true"
            - name: "SpacesInternal__3__AutoLog2DBLogLevel"
              value: "Notice"
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /live
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          resources:
            {{- toYaml .Values.transfer.resources | nindent 12 }}
      initContainers:
        {{- if .Values.nsiDesignOecd.enabled }}
        - name: dbup-nsi-design-oecd-data
          image: "{{ .Values.nsiDesignOecd.dbup.image.repository }}:{{ .Values.nsiDesignOecd.dbup.image.tag }}"
          imagePullPolicy: {{ .Values.nsiDesignOecd.dbup.image.pullPolicy }}
          envFrom:
          - configMapRef:
              name: mssql
          env:
          - name: SA_PASSWORD
            valueFrom:
              secretKeyRef:
                name: dotstatsuite-db-secret
                key: sapassword
          - name: PASSWORD
            valueFrom:
              secretKeyRef:
                name: mssql-nsi-design-oecd-data
                key: password
          command: ['bash', '-c']
          args:
            - dotnet DotStat.DbUp.dll upgrade --connectionString "Server={{ template "dotstatsuite.databaseHost" . }};Database=$(NSI_DESIGN_OECD_DATA_DB);User=$(SA_USER);Password=$(SA_PASSWORD);" --dataDb --loginName $(NSI_DESIGN_OECD_DATA_USER) --loginPwd $(PASSWORD) --force
        {{- end }}
        {{- if .Values.nsiStagingOecd.enabled }}
        - name: dbup-nsi-staging-oecd-data
          image: "{{ .Values.nsiStagingOecd.dbup.image.repository }}:{{ .Values.nsiStagingOecd.dbup.image.tag }}"
          imagePullPolicy: {{ .Values.nsiStagingOecd.dbup.image.pullPolicy }}
          envFrom:
          - configMapRef:
              name: mssql
          env:
          - name: SA_PASSWORD
            valueFrom:
              secretKeyRef:
                name: dotstatsuite-db-secret
                key: sapassword
          - name: PASSWORD
            valueFrom:
              secretKeyRef:
                name: mssql-nsi-staging-oecd-data
                key: password
          command: ['bash', '-c']
          args:
            - dotnet DotStat.DbUp.dll upgrade --connectionString "Server={{ template "dotstatsuite.databaseHost" . }};Database=$(NSI_STAGING_OECD_DATA_DB);User=$(SA_USER);Password=$(SA_PASSWORD);" --dataDb --loginName $(NSI_STAGING_OECD_DATA_USER) --loginPwd $(PASSWORD) --force
        {{- end }}
        - name: dbup-nsi-stable-siscc-data
          image: "{{ .Values.nsiStableSiscc.dbup.image.repository }}:{{ .Values.nsiStableSiscc.dbup.image.tag }}"
          imagePullPolicy: {{ .Values.nsiStableSiscc.dbup.image.pullPolicy }}
          envFrom:
          - configMapRef:
              name: mssql
          env:
          - name: SA_PASSWORD
            valueFrom:
              secretKeyRef:
                name: dotstatsuite-db-secret
                key: sapassword
          - name: PASSWORD
            valueFrom:
              secretKeyRef:
                name: mssql-nsi-stable-siscc-data
                key: password
          command: ['bash', '-c']
          args:
            - dotnet DotStat.DbUp.dll upgrade --connectionString "Server={{ template "dotstatsuite.databaseHost" . }};Database=$(NSI_STABLE_SISCC_DATA_DB);User=$(SA_USER);Password=$(SA_PASSWORD);" --dataDb --loginName $(NSI_STABLE_SISCC_DATA_USER) --loginPwd $(PASSWORD) --force
        - name: dbup-nsi-reset-siscc-data
          image: "{{ .Values.nsiResetSiscc.dbup.image.repository }}:{{ .Values.nsiResetSiscc.dbup.image.tag }}"
          imagePullPolicy: {{ .Values.nsiResetSiscc.dbup.image.pullPolicy }}
          envFrom:
          - configMapRef:
              name: mssql
          env:
          - name: SA_PASSWORD
            valueFrom:
              secretKeyRef:
                name: dotstatsuite-db-secret
                key: sapassword
          - name: PASSWORD
            valueFrom:
              secretKeyRef:
                name: mssql-nsi-reset-siscc-data
                key: password
          command: ['bash', '-c']
          args:
            - dotnet DotStat.DbUp.dll upgrade --connectionString "Server={{ template "dotstatsuite.databaseHost" . }};Database=$(NSI_RESET_SISCC_DATA_DB);User=$(SA_USER);Password=$(SA_PASSWORD);" --dataDb --loginName $(NSI_RESET_SISCC_DATA_USER) --loginPwd $(PASSWORD) --force --dropDb
      {{- with .Values.transfer.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.transfer.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.transfer.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end -}}
